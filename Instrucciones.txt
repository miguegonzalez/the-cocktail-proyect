# üìå Objetivo de la prueba üìå

El objetivo es desarrollar una peque√±a SPA bajo el framework JavaScript que prefieras (Vue, React, Angular, etc) de forma que se parezca lo m√°ximo posible al dise√±o proporcionado que encontrar√°s [`en este link de Figma`](https://www.figma.com/file/JnLiXZqVFABxdUQEQHwlSe/PruebaTCK?node-id=0%3A120). 

Debe incluir algunas interacciones sencillas en javascript y una petici√≥n a una API que se detallan a continuaci√≥n.

## üìê Estructura de la prueba

Te recomendamos que uses el CLI del framework que selecciones.

Crea tantos componentes como consideres necesarios.

## üïπÔ∏è JavaScript

Esperamos que el desarrollo del ejercicio incluya un par de interacciones sencillas hechas con javascript. 

1. En la parte superior hay unas tabs que cambian entre los dise√±os. En este caso te pedimos que desarrolles los _Tab-1_ y _Tab-3_.

2. En el _Tab-1_ hay unos radio buttons. Toda la caja del radio button es clickable y debe resaltarse con el color de borde.

3. En el _Tab-3_ hay un listado que se obtiene de la API https://punkapi.com/. Te pedimos que pintes 10 resultados, con las siguientes caracter√≠sticas:
      3a. Por cada resultado te pedimos que pintes la imagen ([image_url]), nombre [name], descripci√≥n [description] y maridaje concatenado [food_pairing].
      3b. Adem√°s, en la esquina superior derecha ha de aparecer el grado de alcohol de cada √≠tem [abv], de tal forma que si el valor es 5.0 o menor aparezca en color amarillo; si el valor est√° entre 5.1 y 10.0 aparezca en color naranja y si es superior a 10.0, en color rojo.
      
> Se busca que programes t√∫ misma/o estas funcionalidades. Puedes apoyarte en el framework que hayas decidido usar o en librer√≠as JavaScript "generales" para hacerlo (jQuery, lodash...). Lo que NO nos interesa es que busques plugins espec√≠ficos que solucionen las funcionalidades que se proponen.

## üñç CSS

- Esperamos que emplees SASS ( nosotros usamos SCSS )
- Puedes emplear variables / mixins y cualquier caracter√≠stica del lenguaje.
- **Para compilar el SASS en el fichero application.css puedes usar el m√©todo que prefieras ( Webpack, Gulp, Grunt, NPM, Codekit... )
- Valoramos que emplees _display: flex;_ para la maquetaci√≥n.
- Te pedimos que NO emplees Bootstrap ni ninguna librer√≠a similar, como Vuetify (ni para crear el grid, es muy sencillo preferimos que lo hagas a mano o usando otras opciones https://thingsym.github.io/flexbox-grid-mixins/, https://philipwalton.github.io/solved-by-flexbox/demos/grids/ ... )


## üñäTipograf√≠as

El dise√±o emplea las tipograf√≠as [`Roboto`](https://fonts.google.com/specimen/Roboto) y [`Roboto Slab`](https://fonts.google.com/specimen/Roboto+Slab) que puede encontrar en GoogleFonts.
En el UI KIT vienen definidas todas las variantes de tama√±os y pesos de fuente de todos los textos que encontrar√°s en el dise√±o.
 
## üì± Responsive

Te pedimos que improvises una adapataci√≥n a tablet ( 768px de ancho ) y mobile ( 360px de ancho ) del dise√±o. Tienes libertad. El principal objetivos es que **las cosas se vean lo mejor posible y sobre todo que no haya elementos rotos**.

- Se valorar√° que la maquetaci√≥n sea _fluida_ y se vea correctamente en cualquier resoluci√≥n.


## üìù M√°s cosas a tener en cuenta
Debes:

- Utilizar **git** como control de versiones y entregarnos un repositorio con la prueba y el hist√≥rico
- Hacer un c√≥digo f√°cil de entender y de mantener
- Dar soporte a Chrome y Firefox

Adem√°s, se valorar√°n positivamente los siguientes aspectos:

- **dependencias extra:** eval√∫a la posibilidad de incluir un router y un store.
- **accesibilidad**
- **rendimiento**: que tu soluci√≥n est√© orientada a tener el mejor rendimiento üöÄ
- **escalabilidad**: es decir, que las listas permitan m√°s o menos hijos, que los textos puedan ser m√°s largos sin romper la maquetaci√≥n, etc
- **testing (unitario / e2e)** 
- **separaci√≥n de contenidos**: que los contenidos (textos e im√°genes) est√©n en una carpeta separada y sean f√°cilmente editables (ficheros json, yaml...)
- **herramientas para el desarrollo**: preferimos que nos proporciones herramientas para compilar el c√≥digo (scripts de npm, de webpack, tareas de gulp...). Si no nos las puedes proporcionar, entr√©ganos tanto el c√≥digo fuente como el c√≥digo compilado.
- **cross browsing**: que se vea correctamente en los principales navegadores. Nosotros solemos usar [browserstack](https://www.browserstack.com) para hacer las pruebas (tiene una opci√≥n _trial_).
- **animaciones**: que incluyas animaciones que ayuden a mejorar la experiencia del usuario
- **mobile-first**

y no dudes en a√±adir cualquier aspecto extra que se te ocurra. ü§ì

ü§û ¬°Buena suerte! ü§û